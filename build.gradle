plugins {
    id "java"
    id "idea"
    id 'maven-publish'
    id "com.jfrog.artifactory" version "4.8.1"
    id "edu.wpi.first.GradleRIO" version "2019.3.2"
}

group=libraryGroupId
version=libraryVersion

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.
// Also defines JUnit 4.
dependencies {
    compile wpi.deps.wpilib()
    compile wpi.deps.vendor.java()
    nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
    nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)
}

wrapper {
    gradleVersion = '5.0'
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            groupId libraryGroupId
            version libraryVersion
            artifactId libraryArtifactId

            from components.java
            artifact sourcesJar
        }
    }
}


artifactory {
    contextUrl = 'http://'+ artifactory_hostname + ':8081/artifactory/'   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
//        contextUrl = 'http://repo.myorg.com/artifactory'   //The base Artifactory URL for the publisher
        //A closure defining publishing information
        repository {
            repoKey = artifactory_repoKey   //The Artifactory repository key to publish to
            username = artifactory_username          //The publisher user name
            password = artifactory_password       //The publisher password
        }
        defaults {
            //List of Gradle Publications (names or objects) from which to collect the list of artifacts to be deployed to Artifactory.
            publications ('mavenPublication')
            ////List of Gradle Configurations (names or objects) from which to collect the list of artifacts to be deployed to Artifactory.
            publishConfigs('archives', 'published')
//            properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']  //Optional map of properties to attach to all published artifacts
            /*
            The properties closure in the "defaults" task uses the following syntax:
            properties {
                publicationName 'group:module:version:classifier@type', key1:'value1', key2:'value2', ...
            }
            publicationName: A valid name for a publication of the project. You can use all to apply the properties to all publications.
            group:module:version:classifier@type: A filter that specifies the artifacts to which properties should be attached.
            The filter may contain wildcards: * for all characters or ? for a single character.
            key:'value': A list of key/value properties that will be attached to to the published artifacts matching the filter.
            */
//            properties {                                                   //Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
//                foo '*:*:*:*@*', platform: 'linux', 'win64'                //The property platform=linux,win64 will be set on all artifacts in foo publication
//                mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'                //The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
//                all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3' //The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version
//                //equal to org.jfrog:shared:1.?
//            }
//            publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
//            publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
//            publishPom = true   //Publish generated POM files to Artifactory (true by default).
            publishIvy = false   //Publish generated Ivy descriptor files to Artifactory (true by default).
        }
    }
    // Redefine basic properties of the build info object
    clientConfig.setIncludeEnvVars(true)
    clientConfig.setEnvVarsExcludePatterns('*password*,*secret*')
    clientConfig.setEnvVarsIncludePatterns('*not-secret*')
    clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())
    clientConfig.info.setBuildName('api-build')
    clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
    clientConfig.timeout = 600 // Artifactory connection timeout (in seconds). The default timeout is 300 seconds.
}